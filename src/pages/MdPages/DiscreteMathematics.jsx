import React from "react";
import Article from "./Article";

const DiscreteMathematics = () => {
  return (
    <Article articleName={"Discrete mathematics"}>
      <p>
        Без нее невозможно чувствовать себя уверенно в программировании, Data Science, ведь там постоянно применяются
        понятия и скромные навыки, приобретенные в курсе дискретной математике. Да и частенько, помимо алгоритмов, ее
        спрашивают на собесах: в тестовом задании или на интервью, особенно в зарубежных офисах Европы и США.
      </p>
      <p>
        <strong>1) Комбинаторика</strong>
      </p>
      <p>
        Как ни странно, у большинства с этим по началу проблемы, ибо обычно рассказывают общий случай, выражая его
        формулами, а потом пытаются подогнать условие новой задачи под эти формулы. Такой подход просто ужасен!! Вместо
        того, чтобы решать задачу, студент просто думает: здесь размещение с повторением или нет—{" "}
        <strong>угадай мелодию</strong>. Стоит рассмотреть, как можно больше живых примеров, стараться выводить каждую
        конструкцию с нуля, а <strong>не заучивать формулы</strong>, особенно это важно начинающим, ибо основная
        сложность комбинаторной задачи— формализовать, понять какое перед нами множество, как говорят в теории
        вероятностей: найти пространство исходов.{" "}
      </p>
      <p>
        В этом поможет классика: <em>&quot;Ленинградские математические кружки&quot;</em> (главы Комбинаторика-1 и
        Комбинаторика-2), где куча прикольных примеров и задач. Особенно обратите внимание на раздел &quot;Шары и
        Перегородки&quot;, который очень часто встречается в прикладных задачах и который очень любят спрашивать,
        особенно на собесах в ШАДы.{" "}
      </p>
      <p>
        Если тяжеловато идет, то можно начать с <em>&quot;Комбинаторики&quot;</em> Виленкина, где куча-куча и куча-куча
        примеров, задач, написано все подробно и понятно. Единственное большой объем, но при этом есть даже главы про
        производящие функции и задачи из орбиты.{" "}
      </p>
      <p>
        Отмечу также важность комбинаторики: без нее, например, не сможете решать задачи на дискретную вероятность или
        не сможете даже посчитать сложность многих алгоритмов.{" "}
      </p>
      <p>
        <strong>2) Множества</strong>
      </p>
      <p>
        Что множества можно представлять как кружочки знают еще с детского сада, но вот на формулу включений/исключений
        есть и нормальные задачи, да и любят спросить на олимпиадах явно или неявно, например, в суммировании
        вероятностей и мат ожидания. Чтобы не попасть в просак смотрим первую главу Виленкина.{" "}
      </p>
      <p>
        <strong>3) Текстовые задачи, Индукция, Принцип Дирихле, Игры...</strong>
      </p>
      <p>
        Просто смотрим все темы текстовых задач в <em>&quot;Ленинградских кружках&quot;</em>. Все это{" "}
        <strong>необходимая база</strong> и есть в каждом вступительном, да и опять же просто на собесах. По остальным
        разделам тоже советуем пробежаться, ибо они важные элементы математической культуры. Теории и задач оттуда
        хватит на маги и собесы с лихвой, особенно хорошо задачи гуглятся на problems.ru. Для тестов и интервью на
        собесах подойдет порешать последнюю текстовую задачу из ЕГЭ (это не шутка), например, тесты в Тинек так и
        составляются. В ШАДах же любят давать эти идеи на сюжетах из других дисциплин: линейной алгебры или мат анализа.
        Если уже успели разобраться с ними, то проблем не возникнет.
      </p>
    </Article>
  );
};
export default DiscreteMathematics;
